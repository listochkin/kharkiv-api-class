{
  "name": "pull-pushable",
  "description": "pull-stream with a push interface",
  "version": "1.1.4",
  "homepage": "https://github.com/dominictarr/pull-pushable",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/pull-pushable.git"
  },
  "dependencies": {
    "pull-stream": "~2.18.2"
  },
  "devDependencies": {
    "tape": "~1.0.2"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "license": "MIT",
  "readme": "# pull-pushable\n\nA pull-stream with a pushable interface.\n\n## Example\n\n``` js\nvar pushable = require('pull-pushable')\nvar pull     = require('pull-stream')\n\npushable.push(1)\n\npushable.pipe(pull.drain(console.log))\n```\n```\n\n## Example 2\n\nCreate a false source stream with a `.push(data, cb?)`\nproperty. Use when you really need a push api,\nor need to adapt pull-stream to some other push api.\n\n``` js\nfunction ls (dir) {\n  var ps = pull.pushable()\n  fs.readdir(dir, function (err, ls) {\n    if(err) return ps.end(err)\n    ls.forEach(function (file) {\n      ps.push(path.resolve(dir, file))\n    })\n    ps.end()\n  })\n  return ps\n}\n```\n```\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dominictarr/pull-pushable/issues"
  },
  "_id": "pull-pushable@1.1.4",
  "dist": {
    "shasum": "7664d6741f72687ef5c89f533b78682f3de9a20e",
    "tarball": "http://registry.npmjs.org/pull-pushable/-/pull-pushable-1.1.4.tgz"
  },
  "_from": "pull-pushable@>=1.0.0 <2.0.0",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "dominictarr",
    "email": "dominic.tarr@gmail.com"
  },
  "maintainers": [
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "7664d6741f72687ef5c89f533b78682f3de9a20e",
  "_resolved": "https://registry.npmjs.org/pull-pushable/-/pull-pushable-1.1.4.tgz"
}
